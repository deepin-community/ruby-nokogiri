From: Antonio Terceiro <terceiro@debian.org>
Date: Sat, 7 May 2022 13:50:25 -0300
Subject: test/helper.rb: ignore GC compaction on unsupported platforms

For example, ruby 3.0 on Debian ppc64el architecture does not support GC
compaction. When running the tests, every 20th test crashes like this:

> Error:
> Minitest::Result#test_parsing_attribute_namespace:
> NotImplementedError: Compaction isn't available on this platform
>     <internal:gc>:213:in `compact'
>     /home/terceiro/ruby-nokogiri-1.13.5+dfsg/test/helper.rb:123:in `teardown'
---
 test/helper.rb | 23 ++++++++++++++++-------
 1 file changed, 16 insertions(+), 7 deletions(-)

--- a/test/helper.rb
+++ b/test/helper.rb
@@ -183,14 +183,20 @@
           GC.start(full_mark: true)
         when :compact
           if @@test_count % COMPACT_EVERY == 0
-            GC.compact
+            begin
+              GC.compact
+            rescue NotImplementedError
+            end
             putc("<")
           else
             GC.start(full_mark: true)
           end
         when :verify
           if @@test_count % COMPACT_EVERY == 0
-            gc_verify_compaction_references
+            begin
+              gc_verify_compaction_references
+            rescue NotImplementedError
+            end
             putc("!")
           end
           GC.start(full_mark: true)
@@ -211,11 +217,14 @@
     end
 
     def gc_verify_compaction_references
-      # https://alanwu.space/post/check-compaction/
-      if Gem::Requirement.new(">= 3.2.0").satisfied_by?(Gem::Version.new(RUBY_VERSION))
-        GC.verify_compaction_references(expand_heap: true, toward: :empty)
-      else
-        GC.verify_compaction_references(double_heap: true, toward: :empty)
+      begin
+        # https://alanwu.space/post/check-compaction/
+        if Gem::Requirement.new(">= 3.2.0").satisfied_by?(Gem::Version.new(RUBY_VERSION))
+          GC.verify_compaction_references(expand_heap: true, toward: :empty)
+        else
+          GC.verify_compaction_references(double_heap: true, toward: :empty)
+        end
+      rescue NotImplementedError
       end
     end
 
